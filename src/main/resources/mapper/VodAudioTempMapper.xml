<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssh.sm2_update.mapper.VodAudioTempMapper">
    <resultMap id="BaseResultMap" type="com.sm2.bcl.content.entity.VodAudio">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="defaultSortNumber" jdbcType="INTEGER" property="defaultSortNumber"/>
        <result column="duration" jdbcType="INTEGER" property="duration"/>
        <association property="vodAlbum" javaType="com.sm2.bcl.content.entity.VodAlbum">
            <id property="id" column="id"/>
        </association>
    </resultMap>

    <insert id="batchInsert" parameterType="com.sm2.bcl.content.entity.VodAudio" >
        insert into content_t_vodaudio_temp (id,defaultSortNumber, duration, vodAlbum)
        values
        <foreach collection="list" separator="," item="obj">
            (#{obj.id,jdbcType=BIGINT},#{obj.defaultSortNumber,jdbcType=INTEGER}, #{obj.duration,jdbcType=INTEGER},
            #{obj.vodAlbum.id,jdbcType=BIGINT})
        </foreach>
    </insert>

    <insert id="insert" parameterType="com.sm2.bcl.content.entity.VodAudio">
        insert into content_t_vodaudio_temp (id,defaultSortNumber, duration, vodAlbum)
        values
            (#{id,jdbcType=BIGINT},#{defaultSortNumber,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER},
            #{vodAlbum.id,jdbcType=BIGINT})
    </insert>

    <update id="createTable">
        CREATE TABLE content_t_vodaudio_temp (
          `defaultSortNumber` int(11) NOT NULL,
          `duration` int(11) DEFAULT NULL,
          `id` bigint(20) NOT NULL,
          `vodAlbum` bigint(20) DEFAULT NULL,
          PRIMARY KEY (`id`),
          KEY `UK_a6l157ty36ki8y4qhisclojg6` (`defaultSortNumber`) USING BTREE,
          KEY `FK_r8cm4b86mxhtwvefg5sm4wmdm` (`vodAlbum`) USING BTREE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
    </update>

    <update id="dropTable">
        DROP TABLE IF EXISTS content_t_vodaudio_temp
    </update>

    <update id="renameTable" parameterType="String">
        alter table content_t_vodaudio_temp rename ${_parameter}
    </update>

    <update id="createTrigger" parameterType="string" statementType="STATEMENT">
        CREATE TRIGGER ${triggerName} AFTER INSERT ON `content_t_vodaudio_temp` FOR EACH ROW begin
        INSERT IGNORE INTO ${userDB}.`user_t_weakvodaudio` (id) VALUES (new.id);
        end;
    </update>
</mapper>